import Foundation

// 백준 11057 오르막 수

var n = Int(readLine()!)!
var dp: [[Int]] = Array(repeating: Array(repeating: 1, count: 10), count: 1001)

if n > 1 {
    for i in 2...n{
        for j in 1...9{
            // i : 길이
            // j : j로 끝나는 수의 갯수
            // ex) dp[3][2] = 3자리수이며 2로끝나는 수의 갯수
            // 002, 012, 022, 112, 122, 222 = 총 6개
            // 맨 뒤에 2는 고정이고 앞에 두 숫자만 바뀜
            // 2자리 수 일 때 0로 끝나는 수의 갯수 +
            // 2자리 수 일 때 1로 끝나는 수의 갯수 +
            // 2자리 수 일 때 2로 끝나는 수의 갯수 = 두 숫자가 표현할 수 있는 총 갯수 !!
            // 그래서 점화식 dp[i][j] = (dp[i - 1][0] + dp[i - 1][1] + ... dp[i - 1][j - 1]) + dp[i - 1][j]가 성립됨
            // 따라서 위에 식을 간소화 하면 dp[i][j - 1] = (dp[i - 1][0] + dp[i - 1][1] + ... dp[i - 1][j - 1]) 이니까
            dp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % 10007
            // 위에 식이 성립함
        }
    }
}

print(dp[n].reduce(0){ $0 + $1 } % 10007)